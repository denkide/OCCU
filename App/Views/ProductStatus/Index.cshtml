@using System.Linq

@model IEnumerable<MVCApp.Models.SimpleReportProductStatusModel>

@{
    ViewData["Title"] = "Prodcut Status";
}

@{
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.StatusVal).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Quantity).ToList());
    ViewData["Title"] = "Pie Chart";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Product Status</title>
</head>
<body>
    <div class="box-body">
        <div><p><h3>Product Status</h3></p></div>

        <div>
            <a asp-action="List">List Product Statuses</a>
        </div>
        <div style="padding: 5px 1px 10px 1px;">
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pharetra felis et neque venenatis varius.
            Phasellus sapien ligula, iaculis ut mauris posuere, fermentum tincidunt augue. Quisque dapibus consectetur arcu ac
            bibendum. Aenean egestas leo vel eleifend pretium. Aenean malesuada velit vitae malesuada dignissim. Sed eget nunc
            rutrum, mollis lacus et, laoreet metus. Donec vitae nulla purus. Vivamus lobortis interdum sodales. In non orci vitae
            mauris posuere bibendum. Vivamus pulvinar suscipit libero, sed gravida lorem hendrerit quis. Lorem ipsum dolor sit amet,
            consectetur adipiscing elit.
        </div>

        <div class="chart-container">
            <canvas id="chart" style="width:100%; height:500px; border: 1px solid black;"></canvas>
        </div>
    </div>
</body>
</html>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script type="text/javascript">

        $(function () {
    var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
                labels: @Html.Raw(XLabels),
                datasets: [{
                    label: "Status Chart",
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues)
    }]
            };

var options = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
}],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

       var myChart = new  Chart(ctx, {
                options: options,
                data: data,
                type:'pie'

            });
        });
</script>







